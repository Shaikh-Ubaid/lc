; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [2 x i8] c" \00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1

define i32 @_xx_lcompilers_changed_main_xx() {
.entry:
  %__return_var = alloca i32, align 4
  %x = alloca i32, align 4
  store i32 25, i32* %x, align 4
  %0 = load i32, i32* %x, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i32 %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  store i32 0, i32* %__return_var, align 4
  br label %return

unreachable_after_return:                         ; No predecessors!
  br label %return

return:                                           ; preds = %unreachable_after_return, %.entry
  %1 = load i32, i32* %__return_var, align 4
  ret i32 %1
}

declare void @_lfortran_printf(i8*, ...)

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %exit_code = alloca i32, align 4
  %2 = call i32 @_xx_lcompilers_changed_main_xx()
  store i32 %2, i32* %exit_code, align 4
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)
